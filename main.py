import time
from pensimpy.pensim_classes.Recipe import Recipe
from pensimpy.env_setup.peni_env_setup import PenSimEnv
from pensimpy.helper.show_params import show_params
import numpy as np
'''
env = PenSimEnv()
done = False
observation = env.reset()
recipe_agent = Recipe() # strictly follows the recipe
time_stamp = 0
batch_yield = 0 # keep track of the yield
while not done:
    time_stamp += 1
    action = recipe_agent(t, observation)
    reward, observation, done = env.step(action)
    batch_yield += reward
'''

if __name__ == "__main__":
    yield_records = []
    for seed in range(1, 3):
        t = time.time()

        # Random_seed_ref from 0 to 1000
        # env = PenSimEnv(random_seed_ref=np.random.randint(1000))
        env = PenSimEnv(random_seed_ref=274)
        done = False
        observation, batch_data = env.reset()

        # default
        x = [8, 15, 30, 75, 150, 30, 37, 43, 47, 51, 57, 61, 65, 72, 76, 80, 84, 90, 116, 90, 80,
             22, 30, 35, 34, 33, 32, 31, 30, 29, 23,
             30, 42, 55, 60, 75, 65, 60,
             0.6, 0.7, 0.8, 0.9, 1.1, 1, 0.9, 0.9,
             0, 4000, 0, 4000, 0, 4000, 0, 4000, 0, 4000, 0, 4000, 0, 4000, 0, 4000, 0, 4000, 0, 0,
             0, 500, 100, 0, 400, 150, 250, 0, 100]

        # # default + 100 calls for Fs Foil and Fg
        # x = [8, 13, 30, 82, 156, 28, 39, 45, 49, 48, 59, 66, 69, 73, 81, 86, 81, 83, 114, 92, 87, 22, 31, 32, 37, 33, 32, 33, 29, 29, 25, 31, 44, 58, 66, 80, 69, 62,
        #      0.6, 0.7, 0.8, 0.9, 1.1, 1, 0.9, 0.9,
        #      0, 4000, 0, 4000, 0, 4000, 0, 4000, 0, 4000, 0, 4000, 0, 4000, 0, 4000, 0, 4000, 0, 0,
        #      0, 500, 100, 0, 400, 150, 250, 0, 100]

        # 1000 top1
        # x = [7, 15, 27, 78, 163, 31, 33, 39, 50, 52, 54, 58, 62, 64, 71, 82, 89, 94, 116, 98, 87,
        #      24, 31, 37, 31, 34, 31, 29, 30, 30, 25,
        #      33, 40, 56, 66, 75, 68, 54,
        #      0.5554127758991113, 0.7676077357976071, 0.768911753698651, 0.9365571601116198, 1.0861150998563076, 0.9931536974459727, 0.8776714419262855, 0.9493535950911615,
        #      1, 4235, 1, 4309, 1, 4090, 0, 3875, 0, 3899, 1, 4280, 1, 4018, 0, 3795, 0, 4301, 1, 1,
        #      1, 450, 90, 0, 366, 136, 227, 1, 94]

        # # 1000 top1 only change first 3 rows
        # x = [7, 15, 27, 78, 163, 31, 33, 39, 50, 52, 54, 58, 62, 64, 71, 82, 89, 94, 116, 98, 87,
        #      24, 31, 37, 31, 34, 31, 29, 30, 30, 25,
        #      33, 40, 56, 66, 75, 68, 54,
        #      0.6, 0.7, 0.8, 0.9, 1.1, 1, 0.9, 0.9,
        #      0, 4000, 0, 4000, 0, 4000, 0, 4000, 0, 4000, 0, 4000, 0, 4000, 0, 4000, 0, 4000, 0, 0,
        #      0, 500, 100, 0, 400, 150, 250, 0, 100]

        # # 100 top1
        # x = [8, 16, 28, 81, 137, 28, 38, 43, 48, 48, 56, 66, 60, 78, 77, 87, 80, 84, 104, 90, 82,
        #      23, 29, 35, 30, 31, 28, 33, 31, 26, 25,
        #      31, 37, 53, 61, 75, 64, 59,
        #      0.6468329938975121, 0.7188338813762886, 0.8800000000000001, 0.8655090552916249, 0.9900000000000001, 1.0806341623771156, 0.99, 0.9193644054260693,
        #      1, 3715, 1, 3926, 0, 4223, 0, 3600, 1, 4077, 1, 4003, 1, 3646, 1, 3790, 1, 4236, 1, 0,
        #      1, 528, 91, 0, 418, 154, 270, 1, 105]

        # x = [7, 13, 30, 76, 148, 29, 33, 47, 44, 49, 51, 67, 59, 75, 83, 86, 75, 87, 120, 99, 88, 21, 33, 38, 33, 31, 30, 31, 32, 30, 25, 29, 46, 54, 66, 79, 68, 62, 0.6016503902342087, 0.707284455287067, 0.7454938930799496, 0.9697537579503417, 1.161999329699155, 0.9, 0.9574409087102624, 0.8908383114570896, 0, 4086, 0, 3969, 1, 3936, 0, 4344, 1, 3675, 0, 4094, 0, 3741, 0, 4392, 0, 4246, 0, 1, 0, 489, 97, 0, 363, 146, 252, 0, 94]

        # x = [11.6, 8.850000000000001, 42.3, 48.0, 180.0, 19.799999999999997, 54.76, 32.68, 49.35, 39.27, 47.309999999999995, 52.46, 40.3, 56.160000000000004, 98.8, 60.0, 116.76, 65.7, 150.8, 97.2, 76.0, 11.88, 42.9, 22.75, 29.24, 48.18, 46.4, 15.5, 24.3, 16.53, 18.400000000000002, 23.700000000000003, 47.88, 73.7, 41.4, 48.0, 92.95, 40.8, 0.444, 0.714, 0.672, 1.278, 1.4410000000000003, 1.23, 1.089, 0.7020000000000001, 0.0, 3080.0, 0.0, 3680.0, 0.0, 2320.0000000000005, 0.0, 5280.0, 0.0, 4520.0, 0.0, 5560.000000000001, 0.0, 4440.0, 0.0, 4200.0, 0.0, 2880.0, 0.0, 0.0, 0.0, 725.0, 119.0, 0.0, 420.0, 210.0, 132.5, 0.0, 136.0]

        # top 1
        # x = [8, 15, 31, 76, 144, 32, 39, 44, 44, 48, 53, 57, 60, 79, 82, 74, 87, 96, 105, 99, 88, 23, 30, 37, 32, 34, 34, 27, 29, 30, 25, 32, 39, 56, 64, 76, 61, 54, 0.5751669730340376, 0.7161287257301532, 0.7465629211339744, 0.9488068117056693, 1.130591290628027, 1.068799517372909, 0.81, 0.8428951880325852, 1, 3673, 1, 4158, 1, 4073, 0, 4229, 1, 3821, 1, 3869, 1, 4129, 1, 3906, 1, 4328, 1, 1, 1, 547, 93, 1, 394, 145, 225, 1, 101]
        # x = [8.8, 16.5, 31.624252044238425, 80.13474509247575, 165.0, 30.763382203093368, 40.7, 47.3, 48.05716368821474, 55.15358172418276, 51.4398158471111, 61.6493571632683, 65.67022327424863, 77.96346763446553, 71.3782077191417, 77.23046926307548, 92.4, 90.79850035453829, 114.03714549578332, 99.0, 88.0, 21.96813367025686, 33.0, 38.5, 36.24626215254306, 29.7, 35.2, 28.2419828653085, 27.286406931581023, 29.426747426092, 25.3, 32.432773357247996, 40.027278748110305, 50.19868927568485, 66.0, 78.05107828935165, 64.45022060032773, 57.95664924901469, 0.56851933895408, 0.7699999999999999, 0.72, 0.8263110434540011, 1.1403701584391397, 1.0823399050137648, 0.8481730193616307, 0.9519224931750232, 0.0009510521763949335, 3803.1322001216763, 0.0004744015345583332, 4169.273038967871, 0.0007940386276741609, 4245.208859117792, 0.0, 3600.0, 0.001, 4193.088586277349, 0.0004293134419313078, 4166.552905585846, 0.0, 3746.7115958942272, 0.0, 3806.434973903112, 0.0006842283439804432, 3983.074516003572, 0.00041511053507232776, 0.0006349914867663446, 0.0006841858874726173, 453.56974515739904, 100.11317471293015, 0.00034233634278272326, 363.3829129190667, 161.6677187701564, 229.2738817253559, 0.000524502413540419, 90.58189370332654]
        # top 5 avg
        # x = [7.8, 14.8, 30.4, 73.4, 143.4, 30.8, 38.4, 43.8, 45.8, 52.2, 54.4, 60.4, 62.6, 71.8, 75.8, 80.2, 85.0, 95.0, 107.6, 99.0, 88.0, 21.4, 31.4, 36.4, 32.4, 33.2, 32.8, 30.2, 31.0, 27.4, 25.0, 29.8, 42.0, 51.8, 64.8, 76.8, 64.2, 56.6, 0.5955416187739967, 0.7061391739978364, 0.8282704330824429, 0.8909282577015532, 1.1170682855101133, 1.0140208154379369, 0.8762994770770037, 0.8896914743022541, 0.4, 3916.6, 1.0, 4045.8, 0.8, 4095.0, 0.4, 3931.4, 0.4, 4092.8, 0.4, 3893.6, 0.6, 4237.6, 0.6, 4053.2, 0.8, 3967.0, 0.4, 1.0, 0.4, 515.8, 99.8, 0.4, 386.2, 146.6, 250.8, 1.0, 99.2]
        # x = [8.51826445545889, 16.00424772074361, 30.996084007532545, 75.67795240324442, 165.0, 31.1167874951495, 37.517134557201565, 46.952600119027885, 46.70221550410973, 55.633662490779614, 56.13874242347574, 58.73350436126566, 64.75249444707345, 70.5905736877954, 73.42779788833738, 78.13675012079501, 92.4, 92.67862355772874, 111.30857626889338, 99.0, 88.0, 20.868928424413422, 32.543066719264424, 38.5, 32.21922122362112, 31.631459318642293, 34.33712606436651, 30.963212691122386, 28.882325856649402, 29.81495080207181, 25.3, 30.692668219709525, 41.10956338902931, 51.34082691270805, 64.07858166386677, 79.7076950834366, 66.22888528897901, 61.16164487705446, 0.5683817896853832, 0.7216228843088829, 0.7814762779031887, 0.8150302678829588, 1.0852952487456826, 1.0635565812810597, 0.885589697857139, 0.9119219029652321, 0.0006508037184594688, 4152.272616695675, 0.00038242997551983136, 3994.57730811427, 0.0004267924907440921, 4330.515111940609, 0.0002201643926498322, 4057.3048648650934, 0.0004887077190226937, 4129.919664851061, 0.0005178151549493561, 4007.040501544977, 0.0003723523839111141, 3985.7852634006035, 0.00014132478485992338, 3820.8122598090304, 0.0006909702921107567, 4093.9661577582106, 0.0008048567512591281, 0.00043858210126494323, 0.0008423455973828687, 457.9009138822847, 100.16027529655159, 0.0005331011023020497, 382.16792953983196, 149.69209116184737, 232.53941047614484, 0.0004996323309511119, 92.86529551421842]
        # top 10 avg
        # x = [7.4, 14.5, 30.1, 73.6, 149.2, 30.9, 38.7, 42.6, 46.2, 50.8, 53.5, 60.8, 64.9, 71.0, 74.5, 81.8, 81.0, 91.6, 112.8, 99.0, 88.0, 22.0, 29.9, 35.8, 33.2, 32.3, 32.1, 29.5, 31.2, 28.6, 25.0, 29.3, 42.8, 53.8, 64.8, 77.6, 63.8, 60.2, 0.6269681355769225, 0.7001377913191238, 0.8268784002534207, 0.8928208089753202, 1.120386883951827, 0.9881507983169122, 0.8547059668979283, 0.8988206079909796, 0.6, 3976.8, 0.8, 4004.7, 0.6, 4152.1, 0.4, 3976.0, 0.4, 4000.6, 0.5, 4029.7, 0.5, 4098.2, 0.5, 3882.6, 0.9, 4144.1, 0.4, 0.9, 0.4, 494.4, 98.7, 0.7, 398.6, 144.4, 250.9, 0.9, 97.2]
        # x = [8.376798469871405, 15.65712760672685, 30.774052950781474, 74.1240646070213, 165.0, 30.707137816700282, 37.04464242504732, 46.66016425591251, 46.648144033517504, 54.23846595104703, 55.73210692888737, 60.9600415995068, 63.700624681621846, 70.58219038618192, 73.41352054331931, 79.0392987052004, 88.51250668293656, 92.24902887064253, 110.14179023695385, 99.0, 88.0, 21.522355004348327, 32.37604211725373, 38.0537503828063, 33.70841820222677, 30.946749869841785, 34.35567221971644, 30.959771748141424, 29.158486529930173, 29.582349242939436, 25.300000000000004, 30.52873818518956, 40.43518639450771, 52.28148257138228, 63.628952105164146, 79.21696791623673, 63.587150605553425, 61.513257872302134, 0.5725749460724233, 0.7392711275602389, 0.7739217033333949, 0.8331329170658588, 1.0507617151163617, 1.054289222895014, 0.8972147762724424, 0.8969872214892238, 0.000568189073429981, 4183.00706108329, 0.00041002358934935716, 3897.9605177143153, 0.00046587227655772056, 4225.468714664008, 0.00029311210667985006, 4041.6502839909685, 0.0005403636755564244, 4159.8214510760345, 0.0005940855770686273, 4029.229377854608, 0.0005225612336807654, 3983.2361109696053, 0.0003217407558966582, 3931.47771404483, 0.0006644677470420731, 4126.851604300973, 0.0007532409615733985, 0.0005085402146999228, 0.0007364791016135426, 470.309512649745, 97.82652639312117, 0.0005259496600549993, 390.66340368694944, 151.69561134069775, 232.7263871917691, 0.0005593317194992701, 94.45426941930052]

        # factor = 50
        # x = [ele * (1 + np.random.randint(-factor, factor) / 100) for ele in x]

        recipe = Recipe(x)

        time_stamp, batch_yield, yield_pre = 0, 0, 0
        while not done:
            # time is from 1 to 1150
            time_stamp += 1

            # Get action from recipe agent based on time
            Fs, Foil, Fg, pressure, Fremoved, Fw, Fpaa = recipe.run(time_stamp)

            # Run and get the reward
            # observation is a class which contains all the variables, e.g. observation.Fs.y[k], observation.Fs.t[k]
            # are the Fs value and corresponding time at k
            observation, batch_data, reward, done = env.step(time_stamp,
                                                             batch_data,
                                                             Fs, Foil, Fg, pressure, Fremoved, Fw, Fpaa)
            batch_yield += reward

        print(f"=== cost: {int(time.time() - t)} s")
        print(f"=== batch_yield: {batch_yield} at seed {seed}")
        yield_records.append(batch_yield)

        # # check
        # from pensimpy.pensim_classes.Constants import H
        # import numpy as np
        #
        # batch_data.P.y = np.nan_to_num(batch_data.P.y)
        # batch_data.V.y = np.nan_to_num(batch_data.V.y)
        # penicillin_yield_total = (batch_data.V.y[-1] * batch_data.P.y[-1]
        #                           - np.dot(batch_data.Fremoved.y, batch_data.P.y) * H) / 1000
        # print(f"=== penicillin_yield: {penicillin_yield_total}")

        # # Plot
        # show_params(batch_data)
    print(yield_records)
